name: Post prod-release checklist comment to master PRs

on:
  pull_request:
    # Run whenever a pull-request targets the master branch
    branches: [ master ]
    types: [ opened ]

permissions:          # least-privilege token for this job
  pull-requests: write
  contents:    read

jobs:
  comment:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Post prod-release checklist comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            // core, github, context are pre-injected by github-script

            const CHECKLIST_PATH = '.github/PULL_REQUEST_TEMPLATE/prod_release_checklist.md';

            // ── load the checklist file ───────────────────────────────
            if (!fs.existsSync(CHECKLIST_PATH)) {
              core.warning(`Checklist not found at ${CHECKLIST_PATH}; skipping.`);
              return;
            }
            const checklist = fs.readFileSync(CHECKLIST_PATH, 'utf8').trim();

            // ── target PR info ────────────────────────────────────────
            const pr = context.payload.pull_request;

            // ── avoid duplicate comments ─────────────────────────────
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              issue_number: pr.number,
              per_page: 100
            });

            const alreadyPresent = comments.some(c => c.body && c.body.includes(checklist));
            if (alreadyPresent) {
              core.info('Checklist comment already present – no action needed.');
              return;
            }

            // ── post the checklist as a PR comment ──────────────────
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              issue_number: pr.number,
              body: checklist
            });
